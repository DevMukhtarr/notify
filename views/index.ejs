<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Arial', sans-serif;
      background-color: #ecf0f1; /* Light Blue Background */
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .login-container {
      background-color: #ffffff; /* White Container */
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    .login-container h2 {
      color: #3498db; /* Light Blue Text */
    }

    .login-form input {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      box-sizing: border-box;
    }

    .login-form button {
      background-color: #3498db; /* Light Blue Button */
      color: #ffffff;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .login-signup-section span{
        display: block;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h2>Login</h2>
    <form class="login-form" id="loginForm">
      <input type="text" name="username" placeholder="Username" required>
      <input type="password" name="password" placeholder="Password" required>
      <div class="login-signup-section">
          <button type="submit">Login</button>
          <span>Not a user? <a href="/register">Sign Up</a></span>
      </div>
    </form>
  </div>
  <script>
    const loginForm = document.getElementById('loginForm');

    
    loginForm.addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(loginForm);

            fetch('/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    username: formData.get('username'),
                    password: formData.get('password'),
                }),
            })
            .then(response => {
                if (response.status === 401) {
                throw new Error('Invalid email or password');
            }
                if (response.status === 400) {
                throw new Error('All Inputs are required');
            }
                return response.json();
            })
            .then(data => {
                // Assuming the server returns a JWT in the response
                const jwtToken = data.token;

                localStorage.setItem('x-access-token', jwtToken);
                window.location.href = '/home';
            })
            .catch(error => {
              if (error.message === 'Invalid email or password') {
                alert('Invalid email or password');
            }
              if (error.message === 'All Inputs are required') {
                alert('All Inputs are required');
            }
            });
        });
  </script>
</body>
</html>